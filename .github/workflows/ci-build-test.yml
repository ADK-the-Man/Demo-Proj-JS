
name: CI Build & Test Pipeline 

on:
  push:
    branches: [ main ]
    # paths-ignore:
    # - '.github/workflows/ci-build-test.yml'
  pull_request:
    branches: [ main ]


jobs:
  build-test:
    environment: development
    name: Build & Test (${{ matrix.project }}) #Setting name for each Build appended by dynamic name coming from matrix
    runs-on: ubuntu-latest  #Each job runs on a fresh Ubuntu runner
    strategy:
      matrix:
        project: [backend, frontend] # Triggers two jobs -- one for frontend, the other for backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4 #Pulls your repo into the runner

      - name: Setup Node.js
        uses: actions/setup-node@v4  # To set up the Node in your runner
        with:
          node-version: 18    # This will install Node.js 18.x for both the jobs
          cache: npm          # Caches the dependencies for faster builds
          cache-dependency-path: ${{ matrix.project }}/package-lock.json  # path to deps

      - name: Install deps
        working-directory: ${{ matrix.project }}
        run: npm ci    # Just like maven -- cleans and installs deps

      - name: Run tests
        working-directory: ${{ matrix.project }}
        run: npm test --if-present  # if test cases are there -- test the code

      - name: Build (frontend only)
        if: matrix.project == 'frontend'   # Asking that to run this step only in the frontend job
        working-directory: frontend
        run: npm run build

      - name: Configure-AWS-Credentials # Configure AWS Credentials
        if: matrix.project == 'frontend'
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY}}
          
      - name: Upload frontend build to S3  # Uploading Frontend builds to S3
        if: matrix.project == 'frontend'
        run: aws s3 sync frontend/build s3://${{ secrets.S3_BUCKET }}/builds --delete
          
      # Uploading normally to the Github Arifacts page and to enable the CD workflow to access the artifacts
      # - name: Upload frontend build artifact
      #   if: matrix.project == 'frontend'   # As frontend code needs to be built, asking only to upload the frontend build
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: frontend-build
      #     path: frontend/build   # This will be saved for later jobs (like CD)
